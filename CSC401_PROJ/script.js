




const wordE1 = document.getElementById('guessbox');
const wrongLetterE1 = document.getElementById('usedlettersbank');

const playAgain = document.getElementById('playagainbtn');    //NEW CODE
const popup = document.getElementById('popup-container');       //NEW CODE
const notification = document.getElementById('notification-container');  //NEW CODE
const finalMessage = document.getElementById('final-message')   //NEW CODE
const modal_window = document.getElementById('modal_window');   //NEW CODE



const words = ['application', 'programming', 'interface', 'wizard'];

let selectedWord = words[Math.floor(Math.random() * words.length)];
const correctLetters = [];
const wrongLetters = []; 



// ------------------------------MOVE TIMER FUNCTION HERE (MORE ORGANIZED)

const countdownEl=document.getElementById('countdown');  
const startingMinutes = .2; // change this back to 2 ( .2 is just for test )
let time = startingMinutes*60;

setInterval(updateCountdown, 1000);

function updateCountdown(){

    if(time > -1){
        const minutes=Math.floor(time/60);
        let seconds= time % 60;
        seconds=seconds < 10 ? '0' + seconds : seconds;
        countdownEl.innerHTML=minutes+":"+seconds;
        time--;
    }
// -------------------------------NEW CODE ---------------------------


    // When the timer reaches 0, have the modal display, calling the function in css file(modal-window.show)
    if(time == -1){
        modal_window.classList.add('show');
    }


// -------------------------------NEW CODE ---------------------------
 }  


 


 
//Show hidden word
function displayWord(){
    wordE1.innerHTML = `
    ${selectedWord
    .split('')
    .map(
        letter =>`
        <span class="letter">
        ${correctLetters.includes(letter) ? letter : ''}
        </span>
        `
    )
    .join('')}
    `;

    const innerWord = wordE1.innerText.replace(/\n/g, '');
}


/// Update the wrong letters
function updateWrongLetterE1(){
    //Display wrong letters
    wrongLetterE1.innerHTML = `
    ${wrongLetters.length > 0 ?  '<h4><u>Letters Used So Far</u></h4>' : ''}
    ${wrongLetters.map(letter => `<span>${letter}</span>`)}
    `;
}






//------------NEW CODE -----------------------------------//


//Show notification
function showNotification(){
    notification.classList.add('show');

    setTimeout(() => {
        notification.classList.remove('show');
    }, 2000);
}


//Keydown letter press
window.addEventListener('keydown', e =>{
    if(e.keyCode >= 65 && e.keyCode <=90){
        const letter = e.key;

        if(selectedWord.includes(letter)){
            if(!correctLetters.includes(letter)){
                correctLetters.push(letter);

                displayWord();
            } else{
                showNotification();
            }
        } else{
            if(!wrongLetters.includes(letter)){
                wrongLetters.push(letter);

                updateWrongLetterE1();
            } else{
                showNotification();
            }
        }
    }
});

//Restart game and play again
playAgain.addEventListener('click', () => {
    //Empty arrays
    correctLetters.splice(0);
    wrongLetters.splice(0);

    selectedWord = words[Math.floor(Math.random() * words.length)];


    displayWord();
    

    updateWrongLetterE1();
   
    modal_window.style.display='none';

//reset the timer 
    time = startingMinutes*60;
    updateCountdown();

    
    
});









//------------------------------------------//

displayWord();